{"ast":null,"code":"var _jsxFileName = \"/Users/zaidalkhatib/Documents/Projects/ReactProjects/newPersonalWebsite/client/src/components/Circle.js\";\nimport React from \"react\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport { easeQuadInOut } from \"d3-ease\";\n\nconst Circle = () => {\n  const percentage = 40;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"10rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AnimatedProgressProvider, {\n    valueStart: 0,\n    valueEnd: 66,\n    duration: 1.4,\n    easingFunction: easeQuadInOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, value => {\n    const roundedValue = Math.round(value);\n    return /*#__PURE__*/React.createElement(CircularProgressbar, {\n      value: value,\n      text: `${roundedValue}%`\n      /* This is important to include, because if you're fully managing the\n      animation yourself, you'll want to disable the CSS animation. */\n      ,\n      styles: buildStyles({\n        pathTransition: \"none\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    });\n  })));\n};\n\nexport default Circle;","map":{"version":3,"sources":["/Users/zaidalkhatib/Documents/Projects/ReactProjects/newPersonalWebsite/client/src/components/Circle.js"],"names":["React","CircularProgressbar","buildStyles","easeQuadInOut","Circle","percentage","width","value","roundedValue","Math","round","pathTransition"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,mBAAR,EAA6BC,WAA7B,QAA+C,4BAA/C;AACA,SAAQC,aAAR,QAA4B,SAA5B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,UAAU,GAAG,EAAnB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,wBAAD;AACE,IAAA,UAAU,EAAE,CADd;AAEE,IAAA,QAAQ,EAAE,EAFZ;AAGE,IAAA,QAAQ,EAAE,GAHZ;AAIE,IAAA,cAAc,EAAEH,aAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMII,KAAD,IAAW;AACV,UAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAX,CAArB;AACA,wBACE,oBAAC,mBAAD;AACE,MAAA,KAAK,EAAEA,KADT;AAEE,MAAA,IAAI,EAAG,GAAEC,YAAa;AACtB;;AAHF;AAKE,MAAA,MAAM,EAAEN,WAAW,CAAC;AAACS,QAAAA,cAAc,EAAE;AAAjB,OAAD,CALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAjBH,CADF,CADF,CADF;AAyBD,CA3BD;;AA6BA,eAAeP,MAAf","sourcesContent":["import React from \"react\";\nimport {CircularProgressbar, buildStyles} from \"react-circular-progressbar\";\nimport {easeQuadInOut} from \"d3-ease\";\n\nconst Circle = () => {\n  const percentage = 40;\n  return (\n    <div>\n      <div style={{width: \"10rem\"}}>\n        <AnimatedProgressProvider\n          valueStart={0}\n          valueEnd={66}\n          duration={1.4}\n          easingFunction={easeQuadInOut}\n        >\n          {(value) => {\n            const roundedValue = Math.round(value);\n            return (\n              <CircularProgressbar\n                value={value}\n                text={`${roundedValue}%`}\n                /* This is important to include, because if you're fully managing the\n         animation yourself, you'll want to disable the CSS animation. */\n                styles={buildStyles({pathTransition: \"none\"})}\n              />\n            );\n          }}\n        </AnimatedProgressProvider>\n      </div>\n    </div>\n  );\n};\n\nexport default Circle;\n"]},"metadata":{},"sourceType":"module"}